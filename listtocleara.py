Checkgeneratedfile = [] 
Pageclassification = [] # Save the page classification for predeict the next page output from the boundary configuretion on the json file
Packagecheck = []  # Checking the len of the list package 
Pinsquantity = []  # Get the quantity of the pins on the ic 
reforder =  []  #Save the reference breakpage order  
predictorder = [] #Save the 
Devicesname = [] #Getting the devices name paring
Devicelist = {} #Get the list dictionary of paring group device package name 
Deviceodd = [] #Getting the device odd 
Deviceeven = [] #Getting the device even 
Devicesbucket = [] # Device bucket for the page processing 
Packagetypebucket = [] #Package type for the page processing 
Pinsbucket = [] # Getting the pins bucket data for the value of each package type data combination dictionary
reftabledetect = [] # Get the table detector referent inside the array 
refpins = [] #Get the reference pins 
refpagecal = [] # Get the referent page from the page classification algorithm
nextpage = [] #Get the prediction page 
Specpage = [] #Get the spec page data 
combinedictdata = {}  # Get the dictionarylist of the data output for page processingfunction 
Predictbreak = {} # Get the reference page and prediction page for 
Pinsextract = {} # Generate the dictionary for the page reference and the next page prediction 
csvmergepare = {} #Generate the paring csv for merging page data 
Paringlist = [] #Getting the list inside the key of the csv merge page 
Dataodd = [] #Getting the data odd 
Dataeven = [] #Getting the data even
Drifgroup = {} #Get the drif group from the table to recombine with the other directory 
Normalgroup = [] #Get the the normal group list for regrouping with the drif group
Regrouping = {} #The last grouping for the path copy renew directory for merching new order csv file
Basedir = [] #Get the base dir for modify the new directory for new group order 
Newdir = [] #Get the new directory list for putting the fileinto the group 
memdat = [] #Getting the memory of 
memtable = []
Numberfile = [] #Getting number from file csv
PinsName = [] #save append pins name of the mcu or the ic from the data table 
PinsPackage = {} #Getting the Pins list 
Typeofpins = []
PinsNumbers = [] #Getting this number for sorting
Descryptionfunction = [] #Getting the descryption function for the nlp processing data from the table
outloop = [] #Gettin the out loop data 
Datainnerloop = {} #Getting the data inner loop
rawpackdrawing = [] #Getting the raw package data with nan 
Packagedrawing = [] #Getting the package drawing list
Deviceindexheader = []
DeviceNamepack = [] #Getting the device name 
pinsclarify = []
Packagedevice = {} #Gettin the device name pack and the package type 
Packageorder = {}
DictionaryPinsdata = {} #making the type of the pins dictionary data 
NewPinsNamesorted = []
Gateconnect = []
Connectsrecord = {}
reconnect = []
reconnex = {}
SequenceMax = {}
NewKeypins = []
DictionaryPinsdata2 = {}
NewdictPinsdata = {}
refsortindex = []
Packafuldata = [] #Getting the packful data for the 
recordheader = {} #Recording the header file into the csv for writing the condition 
recordheader2 = {} #Recording the header file into the csv for writing the condition 
Numberfile2 = []
getnewjson = {} 
